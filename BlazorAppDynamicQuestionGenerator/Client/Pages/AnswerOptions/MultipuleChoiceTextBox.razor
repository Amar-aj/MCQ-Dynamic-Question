@using BlazorAppDynamicQuestionGenerator.Client.Common;

<div class="row">
    <div class="col-1">
        @StaticData.answerOptionsName[multipuleChoiceOptions.Id-1]
    </div>
    <div class="col-7">
        <RadzenTextArea id="@multipuleChoiceOptions.Id" Placeholder="Enter here..."
                        @oninput="OnMultipuleChoiceOptionsChanged"
                        @bind-Value=@multipuleChoiceOptions.Name class="w-100" />
    </div>
    <div class="col-4">
        <RadzenFileInput @bind-Value=@multipuleChoiceOptions.ImagePath TValue="string" class="w-100"
                         Change=@(args => OnChange(args, "FileInput")) Error=@(args => OnError(args, "FileInput")) />

       @* @if (!string.IsNullOrWhiteSpace(multipuleChoiceOptions.ImagePath))
        {
            <RadzenImage Path="@multipuleChoiceOptions.ImagePath" Style="width: 100%; height:100px" />
        }*@
    </div>

</div>

@code {

    [Parameter]
    public int OptionId { get; set; }

    [Parameter]
    public EventCallback<MultipuleChoiceOptions> MultipuleChoiceOptionsChanged { get; set; }

    RadzenUpload upload;
    MultipuleChoiceOptions multipuleChoiceOptions = new MultipuleChoiceOptions();

    protected override void OnInitialized()
    {
        multipuleChoiceOptions = new MultipuleChoiceOptions()
            {
                Id = OptionId,
            };
    }


    private Task OnMultipuleChoiceOptionsChanged(ChangeEventArgs e)
    {
        multipuleChoiceOptions.Name = e.Value.ToString();
        return MultipuleChoiceOptionsChanged.InvokeAsync(multipuleChoiceOptions);
    }
    private Task OnChange(string value, string name)
    {
        multipuleChoiceOptions.ImagePath = value;
        return MultipuleChoiceOptionsChanged.InvokeAsync(multipuleChoiceOptions);
        //Console.WriteLine($"{value} value changed value");
        //Console.WriteLine($"{name} value name");
        //Console.WriteLine($"{multipuleChoiceOptions.ImagePath} value ImagePath");
    }
    void OnError(UploadErrorEventArgs args, string name)
    {
        Console.WriteLine($"{args.Message}");
    }
}

